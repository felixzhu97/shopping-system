name: 部署到AWS

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-to-aws:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 设置Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: 安装PNPM
        run: npm install -g pnpm@8

      - name: 安装依赖
        run: pnpm install

      # 选项1：部署到Elastic Beanstalk
      - name: 安装EB CLI
        run: pip install awsebcli

      - name: 配置AWS凭证
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-east-1

      - name: 部署到Elastic Beanstalk
        run: |
          cd apps/api
          eb init -p "Node.js 18" --region ap-east-1 shopping-system-api
          eb use shopping-api-prod || eb create shopping-api-prod --instance-type t3.micro --single
          eb setenv MONGODB_URI=${{ secrets.MONGODB_URI }} PORT=8081 NODE_ENV=production
          eb deploy shopping-api-prod
        
      # 选项2：部署到App Runner（如果您选择App Runner而不是Elastic Beanstalk，取消下面的注释）
      # - name: 部署到App Runner
      #   run: |
      #     aws apprunner update-service \
      #       --service-arn ${{ secrets.APPRUNNER_SERVICE_ARN }} \
      #       --source-configuration "{\"AutoDeploymentsEnabled\": true}" \
      #       --region ap-east-1

  # 部署成功通知（可选）
  notify:
    needs: deploy-to-aws
    runs-on: ubuntu-latest
    steps:
      - name: 发送部署结果通知
        if: always()
        run: |
          if [ "${{ needs.deploy-to-aws.result }}" == "success" ]; then
            echo "部署成功"
            # 在这里添加成功通知代码（例如发送钉钉、微信通知）
          else
            echo "部署失败"
            # 在这里添加失败通知代码
          fi 