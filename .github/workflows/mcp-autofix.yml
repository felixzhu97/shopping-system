name: MCP自动修复GitHub Actions

on:
  workflow_run:
    workflows: ['*']
    types:
      - completed
  schedule:
    - cron: '0 0 * * *' # 每天午夜运行
  workflow_dispatch: # 允许手动触发

jobs:
  autofix:
    name: 自动修复工作流问题
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}

    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.MCP_GITHUB_TOKEN }}

      - name: 设置Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: 安装依赖
        run: |
          npm install @octokit/rest

      - name: 检测并修复工作流问题
        run: |
          node .mcp/actions-fixer.js
        env:
          GITHUB_TOKEN: ${{ secrets.MCP_GITHUB_TOKEN }}

      - name: 修复特定的pnpm问题
        if: ${{ github.event.workflow_run.conclusion == 'failure' }}
        run: |
          cd .github/workflows
          for file in *.yml; do
            # 检查是否有pnpm相关错误
            if grep -q "pnpm" "$file" && ! grep -q "pnpm/action-setup" "$file"; then
              echo "修复 $file 中的pnpm问题"
              # 在setup-node后添加pnpm安装步骤
              sed -i '/uses: actions\/setup-node@/a\      - name: 安装pnpm\n        uses: pnpm/action-setup@v2\n        with:\n          version: 8\n          run_install: false' "$file"
              echo "已修复 $file"
            fi
          done

      - name: 提交修复
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            git config --local user.email "mcp-bot@example.com"
            git config --local user.name "MCP自动修复机器人"
            git add .
            git commit -m "修复GitHub Actions工作流问题 [MCP自动修复]"
            git push
          else
            echo "没有需要修复的问题"
          fi
